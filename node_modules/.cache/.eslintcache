[{"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/index.js":"1","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/App.js":"2","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/reportWebVitals.js":"3","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/components/NavigationBar.js":"4","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/NoMatch.js":"5","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/About.js":"6","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/Home.js":"7","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/components/Sidebar.js":"8","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/legion.js":"9","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/graphData.js":"10","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/components/Login/Login.js":"11"},{"size":500,"mtime":1646071796612,"results":"12","hashOfConfig":"13"},{"size":976,"mtime":1646148844125,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1646071796616,"results":"15","hashOfConfig":"13"},{"size":1105,"mtime":1646115588177,"results":"16","hashOfConfig":"13"},{"size":266,"mtime":1646166373790,"results":"17","hashOfConfig":"13"},{"size":4166,"mtime":1646166565003,"results":"18","hashOfConfig":"13"},{"size":3865,"mtime":1646166395797,"results":"19","hashOfConfig":"13"},{"size":3026,"mtime":1646166577125,"results":"20","hashOfConfig":"13"},{"size":1100,"mtime":1646114478961,"results":"21","hashOfConfig":"13"},{"size":2883,"mtime":1646166428381,"results":"22","hashOfConfig":"13"},{"size":3249,"mtime":1646136065787,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1nd6odn",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"27"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/index.js",[],[],["65","66"],"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/App.js",["67"],[],"import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { NavigationBar } from \"./components/NavigationBar\";\n\nimport Sidebar from \"./components/Sidebar\";\nimport Login from \"./components/Login/Login\";\nimport { Home } from \"./Home\";\nimport About from \"./About\";\nimport NoMatch from \"./NoMatch\";\n\nfunction App() {\n  const [token, setToken] = useState();\n\n  if (!token) {\n    return <Login setToken={setToken} />;\n  }\n\n  return (\n    <React.Fragment>\n      <Router>\n        <NavigationBar />\n        <Sidebar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home token={token} />} />\n          <Route path=\"/about\" element={<About token={token} />} />\n          <Route path=\"*\" element={<NoMatch token={token} />} />\n        </Routes>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n",["68","69"],"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/reportWebVitals.js",[],[],"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/components/NavigationBar.js",[],[],"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/NoMatch.js",[],[],["70","71"],"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/About.js",["72","73","74"],[],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst WarpDiv = styled.div`\n  @import url(\"https://fonts.googleapis.com/css?family=Ubuntu\");\n  padding: 90px;\n  * {\n    font-family: Ubuntu;\n  }\n`;\n\nexport default function About({ token }) {\n  const [binaryCommision, setBinaryCommision] = useState(0);\n  const [lbv, setLbv] = useState(0);\n  const [rbv, setRbv] = useState(0);\n\n  useEffect(async () => {\n    const binaryData = await getBinaryTree();\n    consolidateApplicationOrders(binaryData);\n  }, []);\n\n  async function getTree() {\n    return fetch(\"http://localhost:8080/api/get_child_node_users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token.token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    }).then((data) => data.json());\n  }\n\n  async function getOrders() {\n    return fetch(\"http://localhost:8080/api/commission_by_id\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token.token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    }).then((data) => data.json());\n  }\n\n  const consolidateApplicationOrders = async (binTree) => {\n    const getOrderData = await getOrders();\n    let r = 0;\n    let l = 0;\n    let binCom = 0;\n\n    function getKeyByValue(object, value) {\n      return Object.keys(object).find((key) => object[key] === value);\n    }\n\n    for (let i = 0; i < getOrderData.length; i++) {\n      if (getOrderData[i].user_id !== 1) {\n        const userPosition = getKeyByValue(\n          binTree,\n          getOrderData[i].user_id.toString()\n        );\n\n        if (userPosition !== undefined && userPosition.charAt(0) === \"1\") {\n          l = l + getOrderData[i].volume;\n        } else if (\n          userPosition !== undefined &&\n          userPosition.charAt(0) === \"2\"\n        ) {\n          r = r + getOrderData[i].volume;\n        }\n      }\n    }\n\n    setRbv(r);\n    setLbv(l);\n\n    if (r > l) {\n      binCom = Math.floor(r / 200) * 20;\n    } else {\n      binCom = Math.floor(l / 200) * 20;\n    }\n    setBinaryCommision(binCom);\n  };\n\n  const getBinaryTree = async () => {\n    // TODO: remove hard coded parent node.\n    let constructTree = { user_1: {} };\n    const data = await getTree();\n\n    if (Array.isArray(data)) {\n      for (let j = 1; j < data.length; j++) {\n        let placementStr = \"\";\n\n        if (data[j].position === \"L\") {\n          placementStr = placementStr + \".1\";\n        } else if (data[j].position === \"R\") {\n          placementStr = placementStr + \".2\";\n        }\n\n        let curUIDDrop = data[j].father;\n\n        while (curUIDDrop !== 1 && curUIDDrop !== 0 && curUIDDrop !== -1) {\n          for (let k = 1; k < data.length; k++) {\n            if (data[k].position !== null && data[k].father !== -1) {\n              if (data[k].id === curUIDDrop) {\n                if (data[k].position === \"L\") {\n                  placementStr = placementStr + \".1\";\n                } else if (data[k].position === \"R\") {\n                  placementStr = placementStr + \".2\";\n                }\n                curUIDDrop = data[k].father;\n                continue;\n              }\n            }\n          }\n        }\n\n        if (placementStr.charAt(0) == \".\") {\n          placementStr = placementStr.substring(1, placementStr.length);\n        }\n\n        placementStr = reverse(placementStr);\n        function reverse(s) {\n          return s.split(\"\").reverse().join(\"\");\n        }\n\n        if (placementStr.length > 0) {\n          constructTree[\"user_1\"][placementStr] = data[j].id.toString();\n        }\n      }\n\n      const ordered = Object.keys(constructTree[\"user_1\"])\n        .sort()\n        .reduce((obj, key) => {\n          obj[key] = constructTree[\"user_1\"][key];\n          return obj;\n        }, {});\n\n      console.log(\"ORDERED BIN TREE : \" + JSON.stringify(ordered));\n      return ordered;\n    }\n  };\n\n  return (\n    <WarpDiv>\n      <h1>User_1</h1>\n      <h2>Binary Commission: ${binaryCommision}</h2>\n      <h3>LBV: {lbv}</h3>\n      <h3>RBV: {rbv}</h3>\n    </WarpDiv>\n  );\n}\n","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/Home.js",["75","76","77"],[],"import React, { useEffect, useState } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport { GraphData } from \"./graphData\";\n\nimport \"./App.css\";\n\nconst sizeData = { x: 450, y: 700 };\n\nexport const Home = ({ token }) => {\n  const [mapData, setMapData] = useState(null);\n\n  useEffect(async () => {\n    const binaryData = await getBinaryTree();\n    setMapData(GraphData.populateGraphData(JSON.stringify(binaryData)));\n  }, []);\n\n  async function getTree() {\n    return fetch(\"http://localhost:8080/api/get_child_node_users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token.token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    }).then((data) => data.json());\n  }\n\n  const getBinaryTree = async () => {\n    // TODO: remove hard coded parent node.\n    let constructTree = { user_1: {} };\n    const data = await getTree();\n\n    if (Array.isArray(data)) {\n      for (let j = 1; j < data.length; j++) {\n        let placementStr = \"\";\n\n        if (data[j].position === \"L\") {\n          placementStr = placementStr + \".1\";\n        } else if (data[j].position === \"R\") {\n          placementStr = placementStr + \".2\";\n        }\n\n        let curUIDDrop = data[j].father;\n\n        while (curUIDDrop !== 1 && curUIDDrop !== 0 && curUIDDrop !== -1) {\n          for (let k = 1; k < data.length; k++) {\n            if (data[k].position !== null && data[k].father !== -1) {\n              if (data[k].id === curUIDDrop) {\n                if (data[k].position === \"L\") {\n                  placementStr = placementStr + \".1\";\n                } else if (data[k].position === \"R\") {\n                  placementStr = placementStr + \".2\";\n                }\n                curUIDDrop = data[k].father;\n                continue;\n              }\n            }\n          }\n        }\n\n        if (placementStr.charAt(0) == \".\") {\n          placementStr = placementStr.substring(1, placementStr.length);\n        }\n\n        placementStr = reverse(placementStr);\n        function reverse(s) {\n          return s.split(\"\").reverse().join(\"\");\n        }\n\n        if (placementStr.length > 0) {\n          constructTree[\"user_1\"][placementStr] =\n            data[j].user_name.toUpperCase();\n        }\n      }\n\n      const ordered = Object.keys(constructTree[\"user_1\"])\n        .sort()\n        .reduce((obj, key) => {\n          obj[key] = constructTree[\"user_1\"][key];\n          return obj;\n        }, {});\n      let res = { user_1: ordered };\n      return res;\n    }\n  };\n\n  const renderNodeWithCustomEvents = ({ nodeDatum, toggleNode }) => {\n    return (\n      <g>\n        <foreignObject x=\"-150px\" height=\"500px\" width=\"500px\" y=\"-80px\">\n          <div\n            title={nodeDatum.fullName}\n            className=\"elemental-node\"\n            style={nodeDatum.style}\n          >\n            <span title={nodeDatum.fullName} className=\"elemental-name\">\n              {nodeDatum.shortName}\n            </span>\n            {nodeDatum.fullName === false && (\n              <div className=\"elemental-node--hover\">\n                <span>{nodeDatum.fullName}</span>\n              </div>\n            )}\n          </div>\n        </foreignObject>\n      </g>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      {mapData !== null ? (\n        <div className=\"graph\">\n          <Tree\n            data={mapData.graph}\n            renderCustomNodeElement={(rd3tProps) =>\n              renderNodeWithCustomEvents({ ...rd3tProps })\n            }\n            orientation={\"verticle\"}\n            translate={mapData.translate}\n            zoom={0.2}\n            nodeSize={sizeData}\n            scaleExtent={{ min: 0.004, max: 1 }}\n            separation={{ siblings: 1, nonSiblings: 1.5 }}\n          />\n        </div>\n      ) : (\n        <h2 className=\"loading\">Loading</h2>\n      )}\n    </React.Fragment>\n  );\n};\n","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/components/Sidebar.js",["78"],[],"import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  BrowserRouter as Router,\n  Link,\n} from \"react-router-dom\";\n\n/* This defines the actual bar going down the screen */\nconst StyledSideNav = styled.div`\n  position: fixed; /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n  height: 100%;\n  width: 60px; /* Set the width of the sidebar */\n  z-index: 1; /* Stay on top of everything */\n  top: 3.7em; /* Stay at the top */\n  background-color: #171717; /* Black */\n  overflow-x: hidden; /* Disable horizontal scroll */\n  padding-top: 10px;\n`;\n\nconst NavIcon = styled.div``;\n\nconst StyledNavItem = styled.div`\n  height: 70px;\n  width: 60px; /* width must be same size as NavBar to center */\n  text-align: center; /* Aligns <a> inside of NavIcon div */\n  margin-bottom: 0; /* Puts space between NavItems */\n  a {\n    font-size: 2em;\n    color: ${(props) => (props.active ? \"white\" : \"lightblue\")};\n    text-decoration: none;\n    :hover {\n      opacity: 0.7;\n      text-decoration: none; /* Gets rid of underlining of icons */\n    }\n  }\n`;\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePath: \"/\",\n      items: [\n        {\n          path: \"/\" /* path is used as id to check which NavItem is active basically */,\n          name: \"Home\",\n          css: \"fa fa-fw fa-home\",\n          key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */,\n        },\n        {\n          path: \"/about\",\n          name: \"About\",\n          css: \"fa fa-fw fa-clock\",\n          key: 2,\n        },\n      ],\n    };\n  }\n\n  onItemClick = (path) => {\n    this.setState({\n      activePath: path,\n    }); /* Sets activePath which causes rerender which causes CSS to change */\n  };\n\n  render() {\n    const { items, activePath } = this.state;\n    return (\n      <StyledSideNav>\n        {\n          /* items = just array AND map() loops thru that array AND item is param of that loop */\n          items.map((item) => {\n            /* Return however many NavItems in array to be rendered */\n            return (\n              <NavItem\n                path={item.path}\n                name={item.name}\n                css={item.css}\n                onItemClick={this.onItemClick}\n                active={item.path !== activePath}\n                key={item.key}\n              />\n            );\n          })\n        }\n      </StyledSideNav>\n    );\n  }\n}\n\nclass NavItem extends React.Component {\n  handleClick = () => {\n    const { path, onItemClick } = this.props;\n    onItemClick(path);\n  };\n\n  render() {\n    const { active } = this.props;\n    return (\n      <StyledNavItem active={active}>\n        <Link\n          to={this.props.path}\n          className={this.props.css}\n          onClick={this.handleClick}\n        >\n          <NavIcon></NavIcon>\n        </Link>\n      </StyledNavItem>\n    );\n  }\n}\n\nexport default class Sidebar extends React.Component {\n  render() {\n    return <SideNav></SideNav>;\n  }\n}\n","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/legion.js",["79","80"],[],"import React, { Component } from \"react\";\nimport ReactDOM, { render } from \"react-dom\";\nimport { GraphData } from \"./graphData\";\nclass Legion extends Component {\n  state = {\n    colorCodes: GraphData.colorCodes\n  };\n\n  render() {\n    const configData = this.getConfig();\n    return (\n      <div className=\"legion-wrapper\">\n        <ul>\n          {configData.map((config) => (\n            <li>\n              <span style={config.style} className=\"color-palette\"></span>\n              <span>{config.name}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n\n  getConfig() {\n    const graphData = GraphData.populateGraphData();\n    const depth = graphData.maxDepth;\n    const legionName = graphData.legionData;\n    const config = [];\n    for (let i = 1; i <= depth; i++) {\n      config.push({\n        name: legionName[i - 1],\n        style: {\n          backgroundColor: this.state.colorCodes[i]\n            ? this.state.colorCodes[i]\n            : this.state.colorCodes[i % this.state.colorCodes.length]\n        }\n      });\n    }\n    return config;\n  }\n}\n\nexport default Legion;\n","/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/graphData.js",[],[],"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/components/Login/Login.js",[],[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":12},{"ruleId":"81","replacedBy":"89"},{"ruleId":"83","replacedBy":"90"},{"ruleId":"81","replacedBy":"91"},{"ruleId":"83","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":17,"column":13,"nodeType":"95","endLine":20,"endColumn":4},{"ruleId":"93","severity":1,"message":"96","line":20,"column":6,"nodeType":"97","endLine":20,"endColumn":8,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":116,"column":36,"nodeType":"101","messageId":"102","endLine":116,"endColumn":38},{"ruleId":"93","severity":1,"message":"94","line":12,"column":13,"nodeType":"95","endLine":15,"endColumn":4},{"ruleId":"93","severity":1,"message":"103","line":15,"column":6,"nodeType":"97","endLine":15,"endColumn":8,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"100","line":61,"column":36,"nodeType":"101","messageId":"102","endLine":61,"endColumn":38},{"ruleId":"85","severity":1,"message":"105","line":4,"column":20,"nodeType":"87","messageId":"88","endLine":4,"endColumn":26},{"ruleId":"85","severity":1,"message":"106","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":16},{"ruleId":"85","severity":1,"message":"107","line":2,"column":20,"nodeType":"87","messageId":"88","endLine":2,"endColumn":26},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["108"],["109"],["108"],["109"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'consolidateApplicationOrders' and 'getBinaryTree'. Either include them or remove the dependency array.","ArrayExpression",["110"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getBinaryTree'. Either include it or remove the dependency array.",["111"],"'Router' is defined but never used.","'ReactDOM' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [consolidateApplicationOrders, getBinaryTree]",{"range":"116","text":"117"},"Update the dependencies array to be: [getBinaryTree]",{"range":"118","text":"119"},[544,546],"[consolidateApplicationOrders, getBinaryTree]",[423,425],"[getBinaryTree]"]