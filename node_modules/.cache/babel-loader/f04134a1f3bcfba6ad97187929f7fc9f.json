{"ast":null,"code":"var _jsxFileName = \"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/NoMatch.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n`;\n_c = Wrapper;\nexport default function NoMatch(_ref) {\n  let {\n    token\n  } = _ref;\n\n  async function getTree() {\n    return fetch(\"http://localhost:8080/api/get_child_node_users\", {\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer  \" + token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      })\n    }).then(data => data.json());\n  }\n\n  const getBinaryTree = async e => {\n    e.preventDefault();\n    const data = await getTree();\n    console.log(\"FETHC BINARY TREE: \" + JSON.stringify(data));\n\n    if (data.status === 401 || data.error === \"Unauthorized\") {// setError(\"Incorrect login details\");\n    } else {// setToken(token);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getBinaryTree,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Get Binary Tree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c2 = NoMatch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"NoMatch\");","map":{"version":3,"sources":["/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/NoMatch.js"],"names":["React","styled","Wrapper","div","NoMatch","token","getTree","fetch","method","headers","Headers","Authorization","then","data","json","getBinaryTree","e","preventDefault","console","log","JSON","stringify","status","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AACA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA,CAJA;KAAMD,O;AAMN,eAAe,SAASE,OAAT,OAA4B;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;;AACzC,iBAAeC,OAAf,GAAyB;AACvB,WAAOC,KAAK,CAAC,gDAAD,EAAmD;AAC7DC,MAAAA,MAAM,EAAE,KADqD;AAE7DC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnBC,QAAAA,aAAa,EAAE,aAAaN,KADT;AAEnB,wBAAgB,mCAFG;AAGnB,uCAA+B;AAHZ,OAAZ;AAFoD,KAAnD,CAAL,CAOJO,IAPI,CAOEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAPX,CAAP;AAQD;;AAED,QAAMC,aAAa,GAAG,MAAOC,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMJ,IAAI,GAAG,MAAMP,OAAO,EAA1B;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAApC;;AACA,QAAIA,IAAI,CAACS,MAAL,KAAgB,GAAhB,IAAuBT,IAAI,CAACU,KAAL,KAAe,cAA1C,EAA0D,CACxD;AACD,KAFD,MAEO,CACL;AACD;AACF,GATD;;AAWA,sBACE,QAAC,OAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,OAAO,EAAER,aAAjB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;MAhCuBX,O","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.div`\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n`;\n\nexport default function NoMatch({ token }) {\n  async function getTree() {\n    return fetch(\"http://localhost:8080/api/get_child_node_users\", {\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer  \" + token ,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      }),\n    }).then((data) => data.json());\n  }\n\n  const getBinaryTree = async (e) => {\n    e.preventDefault();\n    const data = await getTree();\n    console.log(\"FETHC BINARY TREE: \" + JSON.stringify(data));\n    if (data.status === 401 || data.error === \"Unauthorized\") {\n      // setError(\"Incorrect login details\");\n    } else {\n      // setToken(token);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <h2>No Match</h2>\n\n      <button onClick={getBinaryTree}>\n        <h2>Get Binary Tree</h2>\n      </button>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}