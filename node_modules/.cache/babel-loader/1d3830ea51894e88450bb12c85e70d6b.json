{"ast":null,"code":"var _jsxFileName = \"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/About.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WarpDiv = styled.div`\n  padding: 90px\n`;\n_c = WarpDiv;\nexport default function About(_ref) {\n  _s();\n\n  let {\n    token\n  } = _ref;\n  const [binaryCommision, setBinaryCommision] = useState(0);\n  const [lbv, setLbv] = useState(0);\n  const [rbv, setRbv] = useState(0);\n  useEffect(async () => {\n    // const binaryData = await getBinaryTree();\n    const binaryData = await getBinaryTree(); // if (binaryData) {\n    // }\n    // console.log(\"THE MAP DATA: \" + JSON.stringify(mapData));\n  }, []);\n\n  async function getTree() {\n    return fetch(\"http://localhost:8080/api/get_child_node_users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token.token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(data => data.json());\n  }\n\n  const getBinaryTree = async () => {\n    // TODO: remove hard coded parent node.\n    let constructTree = {\n      user_1: {}\n    };\n    let unPlaced = [];\n    const data = await getTree();\n    console.log(data.length);\n\n    if (Array.isArray(data)) {\n      for (let j = 1; j < data.length; j++) {\n        let placementStr = \"\";\n\n        if (data[j].position === \"L\") {\n          placementStr = placementStr + \"1.\";\n        } else {\n          placementStr = placementStr + \"2.\";\n        }\n\n        let curUIDDrop = data[j].father;\n\n        while (curUIDDrop !== 1 && curUIDDrop !== 0 && curUIDDrop !== -1) {\n          console.log(\"LOOPGIN: \" + curUIDDrop);\n\n          for (let k = 0; k < data.length; k++) {\n            if (data[k].id === curUIDDrop) {\n              if (data[k].position === \"L\") {\n                placementStr = placementStr + \"1.\";\n              } else {\n                placementStr = placementStr + \"2.\";\n              }\n\n              curUIDDrop = data[k].father;\n            }\n          }\n        }\n\n        placementStr = reverse(placementStr);\n        console.log(\"PLACE MENT: \" + placementStr);\n\n        function reverse(s) {\n          return s.split(\"\").reverse().join(\"\");\n        }\n\n        constructTree[\"user_1\"][placementStr] = data[j].user_name.toUpperCase();\n      }\n\n      console.log(\"THE TREE : \" + JSON.stringify(constructTree));\n      return constructTree;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(WarpDiv, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User_1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Binary Commission: \", binaryCommision]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"LBV: \", lbv]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"RBV: \", rbv]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(About, \"kStm/Qg+QfQ2bcx9YX/XR8rMr5s=\");\n\n_c2 = About;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WarpDiv\");\n$RefreshReg$(_c2, \"About\");","map":{"version":3,"sources":["/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/About.js"],"names":["React","useState","useEffect","styled","WarpDiv","div","About","token","binaryCommision","setBinaryCommision","lbv","setLbv","rbv","setRbv","binaryData","getBinaryTree","getTree","fetch","method","headers","Authorization","then","data","json","constructTree","user_1","unPlaced","console","log","length","Array","isArray","j","placementStr","position","curUIDDrop","father","k","id","reverse","s","split","join","user_name","toUpperCase","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst WarpDiv = styled.div`\n  padding: 90px\n`;\n\n\nexport default function About({ token }) {\n  const [binaryCommision, setBinaryCommision] = useState(0);\n  const [lbv, setLbv] = useState(0);\n  const [rbv, setRbv] = useState(0);\n\n  useEffect(async () => {\n    // const binaryData = await getBinaryTree();\n    const binaryData = await getBinaryTree();\n    // if (binaryData) {\n    // }\n    // console.log(\"THE MAP DATA: \" + JSON.stringify(mapData));\n  }, []);\n\n  async function getTree() {\n    return fetch(\"http://localhost:8080/api/get_child_node_users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token.token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    }).then((data) => data.json());\n  }\n\n  const getBinaryTree = async () => {\n    // TODO: remove hard coded parent node.\n    let constructTree = { user_1: {} };\n    let unPlaced = [];\n\n    const data = await getTree();\n\n    console.log(data.length);\n\n    if (Array.isArray(data)) {\n      for (let j = 1; j < data.length; j++) {\n        let placementStr = \"\";\n\n        if (data[j].position === \"L\") {\n          placementStr = placementStr + \"1.\";\n        } else {\n          placementStr = placementStr + \"2.\";\n        }\n\n        let curUIDDrop = data[j].father;\n        while (curUIDDrop !== 1 && curUIDDrop !== 0 && curUIDDrop !== -1) {\n          console.log(\"LOOPGIN: \" + curUIDDrop);\n          for (let k = 0; k < data.length; k++) {\n            if (data[k].id === curUIDDrop) {\n              if (data[k].position === \"L\") {\n                placementStr = placementStr + \"1.\";\n              } else {\n                placementStr = placementStr + \"2.\";\n              }\n              curUIDDrop = data[k].father;\n            }\n          }\n        }\n        placementStr = reverse(placementStr);\n        console.log(\"PLACE MENT: \" + placementStr);\n\n        function reverse(s) {\n          return s.split(\"\").reverse().join(\"\");\n        }\n\n        constructTree[\"user_1\"][placementStr] = data[j].user_name.toUpperCase();\n      }\n\n      console.log(\"THE TREE : \" + JSON.stringify(constructTree));\n      return constructTree;\n    }\n  };\n\n  return (\n    <WarpDiv>\n      <h1>User_1</h1>\n      <h2>Binary Commission: {binaryCommision}</h2>\n      <h3>LBV: {lbv}</h3>\n      <h3>RBV: {rbv}</h3>\n    </WarpDiv>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}