{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\n\nvar d3_selection_1 = require(\"d3-selection\");\n\nvar d3_zoom_1 = require(\"d3-zoom\");\n\nvar lite_1 = require(\"dequal/lite\");\n\nvar clone_1 = __importDefault(require(\"clone\"));\n\nvar uuid_1 = require(\"uuid\");\n\nvar TransitionGroupWrapper_1 = __importDefault(require(\"./TransitionGroupWrapper\"));\n\nvar Node_1 = __importDefault(require(\"../Node\"));\n\nvar Link_1 = __importDefault(require(\"../Link\"));\n\nvar globalCss_1 = __importDefault(require(\"../globalCss\"));\n\nvar Tree =\n/** @class */\nfunction (_super) {\n  __extends(Tree, _super);\n\n  function Tree() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      dataRef: _this.props.data,\n      data: Tree.assignInternalProperties(clone_1.default(_this.props.data)),\n      d3: Tree.calculateD3Geometry(_this.props),\n      isTransitioning: false,\n      isInitialRenderForDataset: true\n    };\n    _this.internalState = {\n      targetNode: null,\n      isTransitioning: false\n    };\n    _this.svgInstanceRef = \"rd3t-svg-\" + uuid_1.v4();\n    _this.gInstanceRef = \"rd3t-g-\" + uuid_1.v4();\n    /**\n     * Finds the node matching `nodeId` and\n     * expands/collapses it, depending on the current state of\n     * its internal `collapsed` property.\n     * `setState` callback receives targetNode and handles\n     * `props.onClick` if defined.\n     */\n\n    _this.handleNodeToggle = function (nodeId) {\n      var data = clone_1.default(_this.state.data);\n\n      var matches = _this.findNodesById(nodeId, data, []);\n\n      var targetNodeDatum = matches[0];\n\n      if (_this.props.collapsible && !_this.state.isTransitioning) {\n        if (targetNodeDatum.__rd3t.collapsed) {\n          Tree.expandNode(targetNodeDatum);\n          _this.props.shouldCollapseNeighborNodes && _this.collapseNeighborNodes(targetNodeDatum, data);\n        } else {\n          Tree.collapseNode(targetNodeDatum);\n        }\n\n        if (_this.props.enableLegacyTransitions) {\n          // Lock node toggling while transition takes place.\n          _this.setState({\n            data: data,\n            isTransitioning: true\n          }); // Await transitionDuration + 10 ms before unlocking node toggling again.\n\n\n          setTimeout(function () {\n            return _this.setState({\n              isTransitioning: false\n            });\n          }, _this.props.transitionDuration + 10);\n        } else {\n          _this.setState({\n            data: data\n          });\n        }\n\n        _this.internalState.targetNode = targetNodeDatum;\n      }\n    };\n    /**\n     * Handles the user-defined `onNodeClick` function.\n     */\n\n\n    _this.handleOnNodeClickCb = function (hierarchyPointNode, evt) {\n      var onNodeClick = _this.props.onNodeClick;\n\n      if (onNodeClick && typeof onNodeClick === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onNodeClick(clone_1.default(hierarchyPointNode), evt);\n      }\n    };\n    /**\n     * Handles the user-defined `onLinkClick` function.\n     */\n\n\n    _this.handleOnLinkClickCb = function (linkSource, linkTarget, evt) {\n      var onLinkClick = _this.props.onLinkClick;\n\n      if (onLinkClick && typeof onLinkClick === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onLinkClick(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n      }\n    };\n    /**\n     * Handles the user-defined `onNodeMouseOver` function.\n     */\n\n\n    _this.handleOnNodeMouseOverCb = function (hierarchyPointNode, evt) {\n      var onNodeMouseOver = _this.props.onNodeMouseOver;\n\n      if (onNodeMouseOver && typeof onNodeMouseOver === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onNodeMouseOver(clone_1.default(hierarchyPointNode), evt);\n      }\n    };\n    /**\n     * Handles the user-defined `onLinkMouseOver` function.\n     */\n\n\n    _this.handleOnLinkMouseOverCb = function (linkSource, linkTarget, evt) {\n      var onLinkMouseOver = _this.props.onLinkMouseOver;\n\n      if (onLinkMouseOver && typeof onLinkMouseOver === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onLinkMouseOver(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n      }\n    };\n    /**\n     * Handles the user-defined `onNodeMouseOut` function.\n     */\n\n\n    _this.handleOnNodeMouseOutCb = function (hierarchyPointNode, evt) {\n      var onNodeMouseOut = _this.props.onNodeMouseOut;\n\n      if (onNodeMouseOut && typeof onNodeMouseOut === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onNodeMouseOut(clone_1.default(hierarchyPointNode), evt);\n      }\n    };\n    /**\n     * Handles the user-defined `onLinkMouseOut` function.\n     */\n\n\n    _this.handleOnLinkMouseOutCb = function (linkSource, linkTarget, evt) {\n      var onLinkMouseOut = _this.props.onLinkMouseOut;\n\n      if (onLinkMouseOut && typeof onLinkMouseOut === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onLinkMouseOut(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n      }\n    };\n    /**\n     * Determines which additional `className` prop should be passed to the node & returns it.\n     */\n\n\n    _this.getNodeClassName = function (parent, nodeDatum) {\n      var _a = _this.props,\n          rootNodeClassName = _a.rootNodeClassName,\n          branchNodeClassName = _a.branchNodeClassName,\n          leafNodeClassName = _a.leafNodeClassName;\n      var hasParent = parent !== null && parent !== undefined;\n\n      if (hasParent) {\n        return nodeDatum.children ? branchNodeClassName : leafNodeClassName;\n      } else {\n        return rootNodeClassName;\n      }\n    };\n\n    return _this;\n  }\n\n  Tree.getDerivedStateFromProps = function (nextProps, prevState) {\n    var derivedState = null; // Clone new data & assign internal properties if `data` object reference changed.\n\n    if (nextProps.data !== prevState.dataRef) {\n      derivedState = {\n        dataRef: nextProps.data,\n        data: Tree.assignInternalProperties(clone_1.default(nextProps.data)),\n        isInitialRenderForDataset: true\n      };\n    }\n\n    var d3 = Tree.calculateD3Geometry(nextProps);\n\n    if (!lite_1.dequal(d3, prevState.d3)) {\n      derivedState = derivedState || {};\n      derivedState.d3 = d3;\n    }\n\n    return derivedState;\n  };\n\n  Tree.prototype.componentDidMount = function () {\n    this.bindZoomListener(this.props);\n    this.setState({\n      isInitialRenderForDataset: false\n    });\n  };\n\n  Tree.prototype.componentDidUpdate = function (prevProps) {\n    if (this.props.data !== prevProps.data) {\n      // If last `render` was due to change in dataset -> mark the initial render as done.\n      this.setState({\n        isInitialRenderForDataset: false\n      });\n    }\n\n    if (!lite_1.dequal(this.props.translate, prevProps.translate) || !lite_1.dequal(this.props.scaleExtent, prevProps.scaleExtent) || this.props.zoomable !== prevProps.zoomable || this.props.zoom !== prevProps.zoom || this.props.enableLegacyTransitions !== prevProps.enableLegacyTransitions) {\n      // If zoom-specific props change -> rebind listener with new values.\n      // Or: rebind zoom listeners to new DOM nodes in case legacy transitions were enabled/disabled.\n      this.bindZoomListener(this.props);\n    }\n\n    if (typeof this.props.onUpdate === 'function') {\n      this.props.onUpdate({\n        node: this.internalState.targetNode ? clone_1.default(this.internalState.targetNode) : null,\n        zoom: this.state.d3.scale,\n        translate: this.state.d3.translate\n      });\n    } // Reset the last target node after we've flushed it to `onUpdate`.\n\n\n    this.internalState.targetNode = null;\n  };\n  /**\n   * Collapses all tree nodes with a `depth` larger than `initialDepth`.\n   *\n   * @param {array} nodeSet Array of nodes generated by `generateTree`\n   * @param {number} initialDepth Maximum initial depth the tree should render\n   */\n\n\n  Tree.prototype.setInitialTreeDepth = function (nodeSet, initialDepth) {\n    nodeSet.forEach(function (n) {\n      n.data.__rd3t.collapsed = n.depth >= initialDepth;\n    });\n  };\n  /**\n   * bindZoomListener - If `props.zoomable`, binds a listener for\n   * \"zoom\" events to the SVG and sets scaleExtent to min/max\n   * specified in `props.scaleExtent`.\n   */\n\n\n  Tree.prototype.bindZoomListener = function (props) {\n    var _this = this;\n\n    var zoomable = props.zoomable,\n        scaleExtent = props.scaleExtent,\n        translate = props.translate,\n        zoom = props.zoom,\n        onUpdate = props.onUpdate,\n        hasInteractiveNodes = props.hasInteractiveNodes;\n    var svg = d3_selection_1.select(\".\" + this.svgInstanceRef);\n    var g = d3_selection_1.select(\".\" + this.gInstanceRef); // Sets initial offset, so that first pan and zoom does not jump back to default [0,0] coords.\n    // @ts-ignore\n\n    svg.call(d3_zoom_1.zoom().transform, d3_zoom_1.zoomIdentity.translate(translate.x, translate.y).scale(zoom));\n    svg.call(d3_zoom_1.zoom().scaleExtent(zoomable ? [scaleExtent.min, scaleExtent.max] : [zoom, zoom]) // TODO: break this out into a separate zoom handler fn, rather than inlining it.\n    .filter(function () {\n      if (hasInteractiveNodes) return d3_selection_1.event.target.classList.contains(_this.svgInstanceRef) || d3_selection_1.event.target.classList.contains(_this.gInstanceRef) || d3_selection_1.event.shiftKey;\n      return true;\n    }).on('zoom', function () {\n      g.attr('transform', d3_selection_1.event.transform);\n\n      if (typeof onUpdate === 'function') {\n        // This callback is magically called not only on \"zoom\", but on \"drag\", as well,\n        // even though event.type == \"zoom\".\n        // Taking advantage of this and not writing a \"drag\" handler.\n        onUpdate({\n          node: null,\n          zoom: d3_selection_1.event.transform.k,\n          translate: {\n            x: d3_selection_1.event.transform.x,\n            y: d3_selection_1.event.transform.y\n          }\n        }); // TODO: remove this? Shouldn't be mutating state keys directly.\n\n        _this.state.d3.scale = d3_selection_1.event.transform.k;\n        _this.state.d3.translate = {\n          x: d3_selection_1.event.transform.x,\n          y: d3_selection_1.event.transform.y\n        };\n      }\n    }));\n  };\n  /**\n   * Assigns internal properties that are required for tree\n   * manipulation to each node in the `data` set and returns a new `data` array.\n   *\n   * @static\n   */\n\n\n  Tree.assignInternalProperties = function (data, currentDepth) {\n    if (currentDepth === void 0) {\n      currentDepth = 0;\n    } // Wrap the root node into an array for recursive transformations if it wasn't in one already.\n\n\n    var d = Array.isArray(data) ? data : [data];\n    return d.map(function (n) {\n      var nodeDatum = n;\n      nodeDatum.__rd3t = {\n        id: null,\n        depth: null,\n        collapsed: false\n      };\n      nodeDatum.__rd3t.id = uuid_1.v4(); // D3@v5 compat: manually assign `depth` to node.data so we don't have\n      // to hold full node+link sets in state.\n      // TODO: avoid this extra step by checking D3's node.depth directly.\n\n      nodeDatum.__rd3t.depth = currentDepth; // If there are children, recursively assign properties to them too.\n\n      if (nodeDatum.children && nodeDatum.children.length > 0) {\n        nodeDatum.children = Tree.assignInternalProperties(nodeDatum.children, currentDepth + 1);\n      }\n\n      return nodeDatum;\n    });\n  };\n  /**\n   * Recursively walks the nested `nodeSet` until a node matching `nodeId` is found.\n   */\n\n\n  Tree.prototype.findNodesById = function (nodeId, nodeSet, hits) {\n    var _this = this;\n\n    if (hits.length > 0) {\n      return hits;\n    }\n\n    hits = hits.concat(nodeSet.filter(function (node) {\n      return node.__rd3t.id === nodeId;\n    }));\n    nodeSet.forEach(function (node) {\n      if (node.children && node.children.length > 0) {\n        hits = _this.findNodesById(nodeId, node.children, hits);\n      }\n    });\n    return hits;\n  };\n  /**\n   * Recursively walks the nested `nodeSet` until all nodes at `depth` have been found.\n   *\n   * @param {number} depth Target depth for which nodes should be returned\n   * @param {array} nodeSet Array of nested `node` objects\n   * @param {array} accumulator Accumulator for matches, passed between recursive calls\n   */\n\n\n  Tree.prototype.findNodesAtDepth = function (depth, nodeSet, accumulator) {\n    var _this = this;\n\n    accumulator = accumulator.concat(nodeSet.filter(function (node) {\n      return node.__rd3t.depth === depth;\n    }));\n    nodeSet.forEach(function (node) {\n      if (node.children && node.children.length > 0) {\n        accumulator = _this.findNodesAtDepth(depth, node.children, accumulator);\n      }\n    });\n    return accumulator;\n  };\n  /**\n   * Recursively sets the internal `collapsed` property of\n   * the passed `TreeNodeDatum` and its children to `true`.\n   *\n   * @static\n   */\n\n\n  Tree.collapseNode = function (nodeDatum) {\n    nodeDatum.__rd3t.collapsed = true;\n\n    if (nodeDatum.children && nodeDatum.children.length > 0) {\n      nodeDatum.children.forEach(function (child) {\n        Tree.collapseNode(child);\n      });\n    }\n  };\n  /**\n   * Sets the internal `collapsed` property of\n   * the passed `TreeNodeDatum` object to `false`.\n   *\n   * @static\n   */\n\n\n  Tree.expandNode = function (nodeDatum) {\n    nodeDatum.__rd3t.collapsed = false;\n  };\n  /**\n   * Collapses all nodes in `nodeSet` that are neighbors (same depth) of `targetNode`.\n   */\n\n\n  Tree.prototype.collapseNeighborNodes = function (targetNode, nodeSet) {\n    var neighbors = this.findNodesAtDepth(targetNode.__rd3t.depth, nodeSet, []).filter(function (node) {\n      return node.__rd3t.id !== targetNode.__rd3t.id;\n    });\n    neighbors.forEach(function (neighbor) {\n      return Tree.collapseNode(neighbor);\n    });\n  };\n  /**\n   * Generates tree elements (`nodes` and `links`) by\n   * grabbing the rootNode from `this.state.data[0]`.\n   * Restricts tree depth to `props.initialDepth` if defined and if this is\n   * the initial render of the tree.\n   */\n\n\n  Tree.prototype.generateTree = function () {\n    var _a = this.props,\n        initialDepth = _a.initialDepth,\n        depthFactor = _a.depthFactor,\n        separation = _a.separation,\n        nodeSize = _a.nodeSize,\n        orientation = _a.orientation;\n    var isInitialRenderForDataset = this.state.isInitialRenderForDataset;\n    var tree = d3_hierarchy_1.tree().nodeSize(orientation === 'horizontal' ? [nodeSize.y, nodeSize.x] : [nodeSize.x, nodeSize.y]).separation(function (a, b) {\n      return a.parent.data.__rd3t.id === b.parent.data.__rd3t.id ? separation.siblings : separation.nonSiblings;\n    });\n    var rootNode = tree(d3_hierarchy_1.hierarchy(this.state.data[0], function (d) {\n      return d.__rd3t.collapsed ? null : d.children;\n    }));\n    var nodes = rootNode.descendants();\n    var links = rootNode.links(); // Configure nodes' `collapsed` property on first render if `initialDepth` is defined.\n\n    if (initialDepth !== undefined && isInitialRenderForDataset) {\n      this.setInitialTreeDepth(nodes, initialDepth);\n    }\n\n    if (depthFactor) {\n      nodes.forEach(function (node) {\n        node.y = node.depth * depthFactor;\n      });\n    }\n\n    return {\n      nodes: nodes,\n      links: links\n    };\n  };\n  /**\n   * Set initial zoom and position.\n   * Also limit zoom level according to `scaleExtent` on initial display. This is necessary,\n   * because the first time we are setting it as an SVG property, instead of going\n   * through D3's scaling mechanism, which would have picked up both properties.\n   *\n   * @static\n   */\n\n\n  Tree.calculateD3Geometry = function (nextProps) {\n    var scale;\n\n    if (nextProps.zoom > nextProps.scaleExtent.max) {\n      scale = nextProps.scaleExtent.max;\n    } else if (nextProps.zoom < nextProps.scaleExtent.min) {\n      scale = nextProps.scaleExtent.min;\n    } else {\n      scale = nextProps.zoom;\n    }\n\n    return {\n      translate: nextProps.translate,\n      scale: scale\n    };\n  };\n\n  Tree.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.generateTree(),\n        nodes = _a.nodes,\n        links = _a.links;\n\n    var _b = this.props,\n        renderCustomNodeElement = _b.renderCustomNodeElement,\n        orientation = _b.orientation,\n        pathFunc = _b.pathFunc,\n        transitionDuration = _b.transitionDuration,\n        zoomable = _b.zoomable,\n        nodeSize = _b.nodeSize,\n        depthFactor = _b.depthFactor,\n        initialDepth = _b.initialDepth,\n        separation = _b.separation,\n        enableLegacyTransitions = _b.enableLegacyTransitions,\n        svgClassName = _b.svgClassName,\n        pathClassFunc = _b.pathClassFunc;\n    var _c = this.state.d3,\n        translate = _c.translate,\n        scale = _c.scale;\n\n    var subscriptions = __assign(__assign(__assign({}, nodeSize), separation), {\n      depthFactor: depthFactor,\n      initialDepth: initialDepth\n    });\n\n    return react_1.default.createElement(\"div\", {\n      className: \"rd3t-tree-container rd3t-grabbable\"\n    }, react_1.default.createElement(\"style\", null, globalCss_1.default), react_1.default.createElement(\"svg\", {\n      className: \"rd3t-svg \" + this.svgInstanceRef + \" \" + svgClassName,\n      width: \"100%\",\n      height: \"100%\"\n    }, react_1.default.createElement(TransitionGroupWrapper_1.default, {\n      enableLegacyTransitions: enableLegacyTransitions,\n      component: \"g\",\n      className: \"rd3t-g \" + this.gInstanceRef,\n      transform: \"translate(\" + translate.x + \",\" + translate.y + \") scale(\" + scale + \")\"\n    }, links.map(function (linkData, i) {\n      return react_1.default.createElement(Link_1.default, {\n        key: 'link-' + i,\n        orientation: orientation,\n        pathFunc: pathFunc,\n        pathClassFunc: pathClassFunc,\n        linkData: linkData,\n        onClick: _this.handleOnLinkClickCb,\n        onMouseOver: _this.handleOnLinkMouseOverCb,\n        onMouseOut: _this.handleOnLinkMouseOutCb,\n        enableLegacyTransitions: enableLegacyTransitions,\n        transitionDuration: transitionDuration\n      });\n    }), nodes.map(function (hierarchyPointNode, i) {\n      var data = hierarchyPointNode.data,\n          x = hierarchyPointNode.x,\n          y = hierarchyPointNode.y,\n          parent = hierarchyPointNode.parent;\n      return react_1.default.createElement(Node_1.default, {\n        key: 'node-' + i,\n        data: data,\n        position: {\n          x: x,\n          y: y\n        },\n        hierarchyPointNode: hierarchyPointNode,\n        parent: parent,\n        nodeClassName: _this.getNodeClassName(parent, data),\n        renderCustomNodeElement: renderCustomNodeElement,\n        nodeSize: nodeSize,\n        orientation: orientation,\n        enableLegacyTransitions: enableLegacyTransitions,\n        transitionDuration: transitionDuration,\n        onNodeToggle: _this.handleNodeToggle,\n        onNodeClick: _this.handleOnNodeClickCb,\n        onNodeMouseOver: _this.handleOnNodeMouseOverCb,\n        onNodeMouseOut: _this.handleOnNodeMouseOutCb,\n        subscriptions: subscriptions\n      });\n    }))));\n  };\n\n  Tree.defaultProps = {\n    onNodeClick: undefined,\n    onNodeMouseOver: undefined,\n    onNodeMouseOut: undefined,\n    onLinkClick: undefined,\n    onLinkMouseOver: undefined,\n    onLinkMouseOut: undefined,\n    onUpdate: undefined,\n    orientation: 'horizontal',\n    translate: {\n      x: 0,\n      y: 0\n    },\n    pathFunc: 'diagonal',\n    pathClassFunc: undefined,\n    transitionDuration: 500,\n    depthFactor: undefined,\n    collapsible: true,\n    initialDepth: undefined,\n    zoomable: true,\n    zoom: 1,\n    scaleExtent: {\n      min: 0.1,\n      max: 1\n    },\n    nodeSize: {\n      x: 140,\n      y: 140\n    },\n    separation: {\n      siblings: 1,\n      nonSiblings: 2\n    },\n    shouldCollapseNeighborNodes: false,\n    svgClassName: '',\n    rootNodeClassName: '',\n    branchNodeClassName: '',\n    leafNodeClassName: '',\n    renderCustomNodeElement: undefined,\n    enableLegacyTransitions: false,\n    hasInteractiveNodes: false\n  };\n  return Tree;\n}(react_1.default.Component);\n\nexports.default = Tree;","map":{"version":3,"sources":["/Users/jarredbaker/Desktop/infinityProj/infinity_ui/node_modules/react-d3-tree/lib/Tree/index.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__importDefault","mod","__esModule","defineProperty","exports","value","react_1","require","d3_hierarchy_1","d3_selection_1","d3_zoom_1","lite_1","clone_1","uuid_1","TransitionGroupWrapper_1","Node_1","Link_1","globalCss_1","Tree","_super","_this","state","dataRef","props","data","assignInternalProperties","default","d3","calculateD3Geometry","isTransitioning","isInitialRenderForDataset","internalState","targetNode","svgInstanceRef","v4","gInstanceRef","handleNodeToggle","nodeId","matches","findNodesById","targetNodeDatum","collapsible","__rd3t","collapsed","expandNode","shouldCollapseNeighborNodes","collapseNeighborNodes","collapseNode","enableLegacyTransitions","setState","setTimeout","transitionDuration","handleOnNodeClickCb","hierarchyPointNode","evt","onNodeClick","persist","handleOnLinkClickCb","linkSource","linkTarget","onLinkClick","handleOnNodeMouseOverCb","onNodeMouseOver","handleOnLinkMouseOverCb","onLinkMouseOver","handleOnNodeMouseOutCb","onNodeMouseOut","handleOnLinkMouseOutCb","onLinkMouseOut","getNodeClassName","parent","nodeDatum","_a","rootNodeClassName","branchNodeClassName","leafNodeClassName","hasParent","undefined","children","getDerivedStateFromProps","nextProps","prevState","derivedState","dequal","componentDidMount","bindZoomListener","componentDidUpdate","prevProps","translate","scaleExtent","zoomable","zoom","onUpdate","node","scale","setInitialTreeDepth","nodeSet","initialDepth","forEach","depth","hasInteractiveNodes","svg","select","g","transform","zoomIdentity","x","y","min","max","filter","event","target","classList","contains","shiftKey","on","attr","k","currentDepth","isArray","map","id","hits","concat","findNodesAtDepth","accumulator","child","neighbors","neighbor","generateTree","depthFactor","separation","nodeSize","orientation","tree","a","siblings","nonSiblings","rootNode","hierarchy","nodes","descendants","links","render","_b","renderCustomNodeElement","pathFunc","svgClassName","pathClassFunc","_c","subscriptions","createElement","className","width","height","component","linkData","key","onClick","onMouseOver","onMouseOut","position","nodeClassName","onNodeToggle","defaultProps","Component"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar d3_selection_1 = require(\"d3-selection\");\nvar d3_zoom_1 = require(\"d3-zoom\");\nvar lite_1 = require(\"dequal/lite\");\nvar clone_1 = __importDefault(require(\"clone\"));\nvar uuid_1 = require(\"uuid\");\nvar TransitionGroupWrapper_1 = __importDefault(require(\"./TransitionGroupWrapper\"));\nvar Node_1 = __importDefault(require(\"../Node\"));\nvar Link_1 = __importDefault(require(\"../Link\"));\nvar globalCss_1 = __importDefault(require(\"../globalCss\"));\nvar Tree = /** @class */ (function (_super) {\n    __extends(Tree, _super);\n    function Tree() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            dataRef: _this.props.data,\n            data: Tree.assignInternalProperties(clone_1.default(_this.props.data)),\n            d3: Tree.calculateD3Geometry(_this.props),\n            isTransitioning: false,\n            isInitialRenderForDataset: true,\n        };\n        _this.internalState = {\n            targetNode: null,\n            isTransitioning: false,\n        };\n        _this.svgInstanceRef = \"rd3t-svg-\" + uuid_1.v4();\n        _this.gInstanceRef = \"rd3t-g-\" + uuid_1.v4();\n        /**\n         * Finds the node matching `nodeId` and\n         * expands/collapses it, depending on the current state of\n         * its internal `collapsed` property.\n         * `setState` callback receives targetNode and handles\n         * `props.onClick` if defined.\n         */\n        _this.handleNodeToggle = function (nodeId) {\n            var data = clone_1.default(_this.state.data);\n            var matches = _this.findNodesById(nodeId, data, []);\n            var targetNodeDatum = matches[0];\n            if (_this.props.collapsible && !_this.state.isTransitioning) {\n                if (targetNodeDatum.__rd3t.collapsed) {\n                    Tree.expandNode(targetNodeDatum);\n                    _this.props.shouldCollapseNeighborNodes && _this.collapseNeighborNodes(targetNodeDatum, data);\n                }\n                else {\n                    Tree.collapseNode(targetNodeDatum);\n                }\n                if (_this.props.enableLegacyTransitions) {\n                    // Lock node toggling while transition takes place.\n                    _this.setState({ data: data, isTransitioning: true });\n                    // Await transitionDuration + 10 ms before unlocking node toggling again.\n                    setTimeout(function () { return _this.setState({ isTransitioning: false }); }, _this.props.transitionDuration + 10);\n                }\n                else {\n                    _this.setState({ data: data });\n                }\n                _this.internalState.targetNode = targetNodeDatum;\n            }\n        };\n        /**\n         * Handles the user-defined `onNodeClick` function.\n         */\n        _this.handleOnNodeClickCb = function (hierarchyPointNode, evt) {\n            var onNodeClick = _this.props.onNodeClick;\n            if (onNodeClick && typeof onNodeClick === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onNodeClick(clone_1.default(hierarchyPointNode), evt);\n            }\n        };\n        /**\n         * Handles the user-defined `onLinkClick` function.\n         */\n        _this.handleOnLinkClickCb = function (linkSource, linkTarget, evt) {\n            var onLinkClick = _this.props.onLinkClick;\n            if (onLinkClick && typeof onLinkClick === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onLinkClick(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n            }\n        };\n        /**\n         * Handles the user-defined `onNodeMouseOver` function.\n         */\n        _this.handleOnNodeMouseOverCb = function (hierarchyPointNode, evt) {\n            var onNodeMouseOver = _this.props.onNodeMouseOver;\n            if (onNodeMouseOver && typeof onNodeMouseOver === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onNodeMouseOver(clone_1.default(hierarchyPointNode), evt);\n            }\n        };\n        /**\n         * Handles the user-defined `onLinkMouseOver` function.\n         */\n        _this.handleOnLinkMouseOverCb = function (linkSource, linkTarget, evt) {\n            var onLinkMouseOver = _this.props.onLinkMouseOver;\n            if (onLinkMouseOver && typeof onLinkMouseOver === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onLinkMouseOver(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n            }\n        };\n        /**\n         * Handles the user-defined `onNodeMouseOut` function.\n         */\n        _this.handleOnNodeMouseOutCb = function (hierarchyPointNode, evt) {\n            var onNodeMouseOut = _this.props.onNodeMouseOut;\n            if (onNodeMouseOut && typeof onNodeMouseOut === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onNodeMouseOut(clone_1.default(hierarchyPointNode), evt);\n            }\n        };\n        /**\n         * Handles the user-defined `onLinkMouseOut` function.\n         */\n        _this.handleOnLinkMouseOutCb = function (linkSource, linkTarget, evt) {\n            var onLinkMouseOut = _this.props.onLinkMouseOut;\n            if (onLinkMouseOut && typeof onLinkMouseOut === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onLinkMouseOut(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n            }\n        };\n        /**\n         * Determines which additional `className` prop should be passed to the node & returns it.\n         */\n        _this.getNodeClassName = function (parent, nodeDatum) {\n            var _a = _this.props, rootNodeClassName = _a.rootNodeClassName, branchNodeClassName = _a.branchNodeClassName, leafNodeClassName = _a.leafNodeClassName;\n            var hasParent = parent !== null && parent !== undefined;\n            if (hasParent) {\n                return nodeDatum.children ? branchNodeClassName : leafNodeClassName;\n            }\n            else {\n                return rootNodeClassName;\n            }\n        };\n        return _this;\n    }\n    Tree.getDerivedStateFromProps = function (nextProps, prevState) {\n        var derivedState = null;\n        // Clone new data & assign internal properties if `data` object reference changed.\n        if (nextProps.data !== prevState.dataRef) {\n            derivedState = {\n                dataRef: nextProps.data,\n                data: Tree.assignInternalProperties(clone_1.default(nextProps.data)),\n                isInitialRenderForDataset: true,\n            };\n        }\n        var d3 = Tree.calculateD3Geometry(nextProps);\n        if (!lite_1.dequal(d3, prevState.d3)) {\n            derivedState = derivedState || {};\n            derivedState.d3 = d3;\n        }\n        return derivedState;\n    };\n    Tree.prototype.componentDidMount = function () {\n        this.bindZoomListener(this.props);\n        this.setState({ isInitialRenderForDataset: false });\n    };\n    Tree.prototype.componentDidUpdate = function (prevProps) {\n        if (this.props.data !== prevProps.data) {\n            // If last `render` was due to change in dataset -> mark the initial render as done.\n            this.setState({ isInitialRenderForDataset: false });\n        }\n        if (!lite_1.dequal(this.props.translate, prevProps.translate) ||\n            !lite_1.dequal(this.props.scaleExtent, prevProps.scaleExtent) ||\n            this.props.zoomable !== prevProps.zoomable ||\n            this.props.zoom !== prevProps.zoom ||\n            this.props.enableLegacyTransitions !== prevProps.enableLegacyTransitions) {\n            // If zoom-specific props change -> rebind listener with new values.\n            // Or: rebind zoom listeners to new DOM nodes in case legacy transitions were enabled/disabled.\n            this.bindZoomListener(this.props);\n        }\n        if (typeof this.props.onUpdate === 'function') {\n            this.props.onUpdate({\n                node: this.internalState.targetNode ? clone_1.default(this.internalState.targetNode) : null,\n                zoom: this.state.d3.scale,\n                translate: this.state.d3.translate,\n            });\n        }\n        // Reset the last target node after we've flushed it to `onUpdate`.\n        this.internalState.targetNode = null;\n    };\n    /**\n     * Collapses all tree nodes with a `depth` larger than `initialDepth`.\n     *\n     * @param {array} nodeSet Array of nodes generated by `generateTree`\n     * @param {number} initialDepth Maximum initial depth the tree should render\n     */\n    Tree.prototype.setInitialTreeDepth = function (nodeSet, initialDepth) {\n        nodeSet.forEach(function (n) {\n            n.data.__rd3t.collapsed = n.depth >= initialDepth;\n        });\n    };\n    /**\n     * bindZoomListener - If `props.zoomable`, binds a listener for\n     * \"zoom\" events to the SVG and sets scaleExtent to min/max\n     * specified in `props.scaleExtent`.\n     */\n    Tree.prototype.bindZoomListener = function (props) {\n        var _this = this;\n        var zoomable = props.zoomable, scaleExtent = props.scaleExtent, translate = props.translate, zoom = props.zoom, onUpdate = props.onUpdate, hasInteractiveNodes = props.hasInteractiveNodes;\n        var svg = d3_selection_1.select(\".\" + this.svgInstanceRef);\n        var g = d3_selection_1.select(\".\" + this.gInstanceRef);\n        // Sets initial offset, so that first pan and zoom does not jump back to default [0,0] coords.\n        // @ts-ignore\n        svg.call(d3_zoom_1.zoom().transform, d3_zoom_1.zoomIdentity.translate(translate.x, translate.y).scale(zoom));\n        svg.call(d3_zoom_1.zoom()\n            .scaleExtent(zoomable ? [scaleExtent.min, scaleExtent.max] : [zoom, zoom])\n            // TODO: break this out into a separate zoom handler fn, rather than inlining it.\n            .filter(function () {\n            if (hasInteractiveNodes)\n                return d3_selection_1.event.target.classList.contains(_this.svgInstanceRef) || d3_selection_1.event.target.classList.contains(_this.gInstanceRef) || d3_selection_1.event.shiftKey;\n            return true;\n        })\n            .on('zoom', function () {\n            g.attr('transform', d3_selection_1.event.transform);\n            if (typeof onUpdate === 'function') {\n                // This callback is magically called not only on \"zoom\", but on \"drag\", as well,\n                // even though event.type == \"zoom\".\n                // Taking advantage of this and not writing a \"drag\" handler.\n                onUpdate({\n                    node: null,\n                    zoom: d3_selection_1.event.transform.k,\n                    translate: { x: d3_selection_1.event.transform.x, y: d3_selection_1.event.transform.y },\n                });\n                // TODO: remove this? Shouldn't be mutating state keys directly.\n                _this.state.d3.scale = d3_selection_1.event.transform.k;\n                _this.state.d3.translate = {\n                    x: d3_selection_1.event.transform.x,\n                    y: d3_selection_1.event.transform.y,\n                };\n            }\n        }));\n    };\n    /**\n     * Assigns internal properties that are required for tree\n     * manipulation to each node in the `data` set and returns a new `data` array.\n     *\n     * @static\n     */\n    Tree.assignInternalProperties = function (data, currentDepth) {\n        if (currentDepth === void 0) { currentDepth = 0; }\n        // Wrap the root node into an array for recursive transformations if it wasn't in one already.\n        var d = Array.isArray(data) ? data : [data];\n        return d.map(function (n) {\n            var nodeDatum = n;\n            nodeDatum.__rd3t = { id: null, depth: null, collapsed: false };\n            nodeDatum.__rd3t.id = uuid_1.v4();\n            // D3@v5 compat: manually assign `depth` to node.data so we don't have\n            // to hold full node+link sets in state.\n            // TODO: avoid this extra step by checking D3's node.depth directly.\n            nodeDatum.__rd3t.depth = currentDepth;\n            // If there are children, recursively assign properties to them too.\n            if (nodeDatum.children && nodeDatum.children.length > 0) {\n                nodeDatum.children = Tree.assignInternalProperties(nodeDatum.children, currentDepth + 1);\n            }\n            return nodeDatum;\n        });\n    };\n    /**\n     * Recursively walks the nested `nodeSet` until a node matching `nodeId` is found.\n     */\n    Tree.prototype.findNodesById = function (nodeId, nodeSet, hits) {\n        var _this = this;\n        if (hits.length > 0) {\n            return hits;\n        }\n        hits = hits.concat(nodeSet.filter(function (node) { return node.__rd3t.id === nodeId; }));\n        nodeSet.forEach(function (node) {\n            if (node.children && node.children.length > 0) {\n                hits = _this.findNodesById(nodeId, node.children, hits);\n            }\n        });\n        return hits;\n    };\n    /**\n     * Recursively walks the nested `nodeSet` until all nodes at `depth` have been found.\n     *\n     * @param {number} depth Target depth for which nodes should be returned\n     * @param {array} nodeSet Array of nested `node` objects\n     * @param {array} accumulator Accumulator for matches, passed between recursive calls\n     */\n    Tree.prototype.findNodesAtDepth = function (depth, nodeSet, accumulator) {\n        var _this = this;\n        accumulator = accumulator.concat(nodeSet.filter(function (node) { return node.__rd3t.depth === depth; }));\n        nodeSet.forEach(function (node) {\n            if (node.children && node.children.length > 0) {\n                accumulator = _this.findNodesAtDepth(depth, node.children, accumulator);\n            }\n        });\n        return accumulator;\n    };\n    /**\n     * Recursively sets the internal `collapsed` property of\n     * the passed `TreeNodeDatum` and its children to `true`.\n     *\n     * @static\n     */\n    Tree.collapseNode = function (nodeDatum) {\n        nodeDatum.__rd3t.collapsed = true;\n        if (nodeDatum.children && nodeDatum.children.length > 0) {\n            nodeDatum.children.forEach(function (child) {\n                Tree.collapseNode(child);\n            });\n        }\n    };\n    /**\n     * Sets the internal `collapsed` property of\n     * the passed `TreeNodeDatum` object to `false`.\n     *\n     * @static\n     */\n    Tree.expandNode = function (nodeDatum) {\n        nodeDatum.__rd3t.collapsed = false;\n    };\n    /**\n     * Collapses all nodes in `nodeSet` that are neighbors (same depth) of `targetNode`.\n     */\n    Tree.prototype.collapseNeighborNodes = function (targetNode, nodeSet) {\n        var neighbors = this.findNodesAtDepth(targetNode.__rd3t.depth, nodeSet, []).filter(function (node) { return node.__rd3t.id !== targetNode.__rd3t.id; });\n        neighbors.forEach(function (neighbor) { return Tree.collapseNode(neighbor); });\n    };\n    /**\n     * Generates tree elements (`nodes` and `links`) by\n     * grabbing the rootNode from `this.state.data[0]`.\n     * Restricts tree depth to `props.initialDepth` if defined and if this is\n     * the initial render of the tree.\n     */\n    Tree.prototype.generateTree = function () {\n        var _a = this.props, initialDepth = _a.initialDepth, depthFactor = _a.depthFactor, separation = _a.separation, nodeSize = _a.nodeSize, orientation = _a.orientation;\n        var isInitialRenderForDataset = this.state.isInitialRenderForDataset;\n        var tree = d3_hierarchy_1.tree()\n            .nodeSize(orientation === 'horizontal' ? [nodeSize.y, nodeSize.x] : [nodeSize.x, nodeSize.y])\n            .separation(function (a, b) {\n            return a.parent.data.__rd3t.id === b.parent.data.__rd3t.id\n                ? separation.siblings\n                : separation.nonSiblings;\n        });\n        var rootNode = tree(d3_hierarchy_1.hierarchy(this.state.data[0], function (d) { return (d.__rd3t.collapsed ? null : d.children); }));\n        var nodes = rootNode.descendants();\n        var links = rootNode.links();\n        // Configure nodes' `collapsed` property on first render if `initialDepth` is defined.\n        if (initialDepth !== undefined && isInitialRenderForDataset) {\n            this.setInitialTreeDepth(nodes, initialDepth);\n        }\n        if (depthFactor) {\n            nodes.forEach(function (node) {\n                node.y = node.depth * depthFactor;\n            });\n        }\n        return { nodes: nodes, links: links };\n    };\n    /**\n     * Set initial zoom and position.\n     * Also limit zoom level according to `scaleExtent` on initial display. This is necessary,\n     * because the first time we are setting it as an SVG property, instead of going\n     * through D3's scaling mechanism, which would have picked up both properties.\n     *\n     * @static\n     */\n    Tree.calculateD3Geometry = function (nextProps) {\n        var scale;\n        if (nextProps.zoom > nextProps.scaleExtent.max) {\n            scale = nextProps.scaleExtent.max;\n        }\n        else if (nextProps.zoom < nextProps.scaleExtent.min) {\n            scale = nextProps.scaleExtent.min;\n        }\n        else {\n            scale = nextProps.zoom;\n        }\n        return {\n            translate: nextProps.translate,\n            scale: scale,\n        };\n    };\n    Tree.prototype.render = function () {\n        var _this = this;\n        var _a = this.generateTree(), nodes = _a.nodes, links = _a.links;\n        var _b = this.props, renderCustomNodeElement = _b.renderCustomNodeElement, orientation = _b.orientation, pathFunc = _b.pathFunc, transitionDuration = _b.transitionDuration, zoomable = _b.zoomable, nodeSize = _b.nodeSize, depthFactor = _b.depthFactor, initialDepth = _b.initialDepth, separation = _b.separation, enableLegacyTransitions = _b.enableLegacyTransitions, svgClassName = _b.svgClassName, pathClassFunc = _b.pathClassFunc;\n        var _c = this.state.d3, translate = _c.translate, scale = _c.scale;\n        var subscriptions = __assign(__assign(__assign({}, nodeSize), separation), { depthFactor: depthFactor,\n            initialDepth: initialDepth });\n        return (react_1.default.createElement(\"div\", { className: \"rd3t-tree-container rd3t-grabbable\" },\n            react_1.default.createElement(\"style\", null, globalCss_1.default),\n            react_1.default.createElement(\"svg\", { className: \"rd3t-svg \" + this.svgInstanceRef + \" \" + svgClassName, width: \"100%\", height: \"100%\" },\n                react_1.default.createElement(TransitionGroupWrapper_1.default, { enableLegacyTransitions: enableLegacyTransitions, component: \"g\", className: \"rd3t-g \" + this.gInstanceRef, transform: \"translate(\" + translate.x + \",\" + translate.y + \") scale(\" + scale + \")\" },\n                    links.map(function (linkData, i) {\n                        return (react_1.default.createElement(Link_1.default, { key: 'link-' + i, orientation: orientation, pathFunc: pathFunc, pathClassFunc: pathClassFunc, linkData: linkData, onClick: _this.handleOnLinkClickCb, onMouseOver: _this.handleOnLinkMouseOverCb, onMouseOut: _this.handleOnLinkMouseOutCb, enableLegacyTransitions: enableLegacyTransitions, transitionDuration: transitionDuration }));\n                    }),\n                    nodes.map(function (hierarchyPointNode, i) {\n                        var data = hierarchyPointNode.data, x = hierarchyPointNode.x, y = hierarchyPointNode.y, parent = hierarchyPointNode.parent;\n                        return (react_1.default.createElement(Node_1.default, { key: 'node-' + i, data: data, position: { x: x, y: y }, hierarchyPointNode: hierarchyPointNode, parent: parent, nodeClassName: _this.getNodeClassName(parent, data), renderCustomNodeElement: renderCustomNodeElement, nodeSize: nodeSize, orientation: orientation, enableLegacyTransitions: enableLegacyTransitions, transitionDuration: transitionDuration, onNodeToggle: _this.handleNodeToggle, onNodeClick: _this.handleOnNodeClickCb, onNodeMouseOver: _this.handleOnNodeMouseOverCb, onNodeMouseOut: _this.handleOnNodeMouseOutCb, subscriptions: subscriptions }));\n                    })))));\n    };\n    Tree.defaultProps = {\n        onNodeClick: undefined,\n        onNodeMouseOver: undefined,\n        onNodeMouseOut: undefined,\n        onLinkClick: undefined,\n        onLinkMouseOver: undefined,\n        onLinkMouseOut: undefined,\n        onUpdate: undefined,\n        orientation: 'horizontal',\n        translate: { x: 0, y: 0 },\n        pathFunc: 'diagonal',\n        pathClassFunc: undefined,\n        transitionDuration: 500,\n        depthFactor: undefined,\n        collapsible: true,\n        initialDepth: undefined,\n        zoomable: true,\n        zoom: 1,\n        scaleExtent: { min: 0.1, max: 1 },\n        nodeSize: { x: 140, y: 140 },\n        separation: { siblings: 1, nonSiblings: 2 },\n        shouldCollapseNeighborNodes: false,\n        svgClassName: '',\n        rootNodeClassName: '',\n        branchNodeClassName: '',\n        leafNodeClassName: '',\n        renderCustomNodeElement: undefined,\n        enableLegacyTransitions: false,\n        hasInteractiveNodes: false,\n    };\n    return Tree;\n}(react_1.default.Component));\nexports.default = Tree;\n"]},"metadata":{},"sourceType":"script"}