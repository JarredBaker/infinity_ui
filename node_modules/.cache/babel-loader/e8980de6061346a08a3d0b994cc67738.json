{"ast":null,"code":"var _jsxFileName = \"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [passwordError, setpasswordError] = useState(\"\");\n\n  async function loginUser(credentials) {\n    return fetch(\"http://localhost:8080/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(data => data.json());\n  }\n\n  const handleValidation = event => {\n    let formIsValid = true;\n\n    if (!password.match(/^[a-zA-Z]{8,22}$/)) {\n      formIsValid = false;\n      setpasswordError(\"Only Letters and length must best min 8 Chracters and Max 22 Chracters\");\n      return false;\n    } else {\n      setpasswordError(\"\");\n      formIsValid = true;\n    }\n\n    return formIsValid;\n  };\n\n  const loginSubmit = async e => {\n    e.preventDefault();\n    let valid = handleValidation();\n\n    if (valid) {\n      const token = await loginUser({\n        username,\n        password\n      });\n      setToken(token);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Infinity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \" justify-content-center\",\n            id: \"loginform\",\n            onSubmit: loginSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"title\",\n                children: \"Username:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"text\",\n                name: \"text\",\n                \"aria-describedby\": \"emailHelp\",\n                placeholder: \"Enter username\",\n                onChange: event => setUsername(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"title\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"exampleInputPassword1\",\n                placeholder: \"Password\",\n                onChange: event => setPassword(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"passworderror\",\n                className: \"text-danger form-text\",\n                children: passwordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary btnSub\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"rHNaZbfBwff4iULiB7fGhwiRS04=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/components/Login/Login.js"],"names":["React","useState","PropTypes","Login","setToken","password","setPassword","username","setUsername","passwordError","setpasswordError","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","handleValidation","event","formIsValid","match","loginSubmit","e","preventDefault","valid","token","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function Login({ setToken }) {\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [passwordError, setpasswordError] = useState(\"\");\n\n  async function loginUser(credentials) {\n    return fetch(\"http://localhost:8080/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    }).then((data) => data.json());\n  }\n\n  const handleValidation = (event) => {\n    let formIsValid = true;\n\n    if (!password.match(/^[a-zA-Z]{8,22}$/)) {\n      formIsValid = false;\n      setpasswordError(\n        \"Only Letters and length must best min 8 Chracters and Max 22 Chracters\"\n      );\n      return false;\n    } else {\n      setpasswordError(\"\");\n      formIsValid = true;\n    }\n\n    return formIsValid;\n  };\n\n  const loginSubmit = async (e) => {\n    e.preventDefault();\n    let valid = handleValidation();\n\n    if (valid) {\n      const token = await loginUser({\n        username,\n        password,\n      });\n      setToken(token);\n    }\n  };\n\n  return (\n    <div className=\"MainContainer\">\n      <div className=\"container\">\n        <h1 className=\"title\">Infinity</h1>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col-md-4\">\n            <form\n              className=\" justify-content-center\"\n              id=\"loginform\"\n              onSubmit={loginSubmit}\n            >\n              <div className=\"form-group\">\n                <label className=\"title\">Username:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"text\"\n                  name=\"text\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter username\"\n                  onChange={(event) => setUsername(event.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label className=\"title\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"exampleInputPassword1\"\n                  placeholder=\"Password\"\n                  onChange={(event) => setPassword(event.target.value)}\n                />\n                <small id=\"passworderror\" className=\"text-danger form-text\">\n                  {passwordError}\n                </small>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary btnSub\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}