{"ast":null,"code":"var _jsxFileName = \"/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/NoMatch.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n`;\n_c = Wrapper;\nexport default function NoMatch(_ref) {\n  let {\n    token\n  } = _ref;\n\n  async function getTree() {\n    return fetch(\"http://localhost:8080/api/get_child_node_users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token.token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(data => data.json());\n  }\n\n  const getBinaryTree = async e => {\n    e.preventDefault();\n    let constructTree = {\n      eagleViewRequestDocument: {}\n    };\n    let unPlaced = [];\n    const data = await getTree();\n    console.log(\"IS ARRAY :  \" + Array.isArray(data));\n\n    if (Array.isArray(data)) {\n      for (let i = 1; i < data.length; i++) {\n        if (data[i - 1].position === \"0\") {\n          constructTree[\"eagleViewRequestDocument\"][\"1\"] = data[i - 1].user_name;\n        } else if (data[i - 1].position === \"L\") {\n          constructTree[\"eagleViewRequestDocument\"][data[i - 1].position.father][\"1\"] = data[i - 1].user_name;\n        } else if (data[i - 1].position === \"R\") {\n          constructTree[\"eagleViewRequestDocument\"][data[i - 1].position.father][\"2\"] = data[i - 1].user_name;\n        } else {\n          unPlaced.push(data[i - 1]);\n        }\n      }\n\n      console.log(\"THE TREE : \" + JSON.stringify(constructTree));\n      console.log(\"UNPLACED : \" + JSON.stringify(unPlaced));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getBinaryTree,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Get Binary Tree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c2 = NoMatch;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"NoMatch\");","map":{"version":3,"sources":["/Users/jarredbaker/Desktop/infinityProj/infinity_ui/src/NoMatch.js"],"names":["React","styled","Wrapper","div","NoMatch","token","getTree","fetch","method","headers","Authorization","then","data","json","getBinaryTree","e","preventDefault","constructTree","eagleViewRequestDocument","unPlaced","console","log","Array","isArray","i","length","position","user_name","father","push","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AACA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA,CAJA;KAAMD,O;AAMN,eAAe,SAASE,OAAT,OAA4B;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;;AACzC,iBAAeC,OAAf,GAAyB;AACvB,WAAOC,KAAK,CAAC,gDAAD,EAAmD;AAC7DC,MAAAA,MAAM,EAAE,KADqD;AAE7DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYL,KAAK,CAACA,KAD1B;AAEP,wBAAgB,mCAFT;AAGP,uCAA+B;AAHxB;AAFoD,KAAnD,CAAL,CAOJM,IAPI,CAOEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAPX,CAAP;AAQD;;AAED,QAAMC,aAAa,GAAG,MAAOC,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,aAAa,GAAG;AAAEC,MAAAA,wBAAwB,EAAE;AAA5B,KAApB;AACA,QAAIC,QAAQ,GAAG,EAAf;AAEA,UAAMP,IAAI,GAAG,MAAMN,OAAO,EAA1B;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAgBC,KAAK,CAACC,OAAN,CAAcX,IAAd,CAA5B;;AACA,QAAIU,KAAK,CAACC,OAAN,CAAcX,IAAd,CAAJ,EAAyB;AACvB,WAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,IAAI,CAACa,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAIZ,IAAI,CAACY,CAAC,GAAG,CAAL,CAAJ,CAAYE,QAAZ,KAAyB,GAA7B,EAAkC;AAChCT,UAAAA,aAAa,CAAC,0BAAD,CAAb,CAA0C,GAA1C,IACEL,IAAI,CAACY,CAAC,GAAG,CAAL,CAAJ,CAAYG,SADd;AAED,SAHD,MAGO,IAAIf,IAAI,CAACY,CAAC,GAAG,CAAL,CAAJ,CAAYE,QAAZ,KAAyB,GAA7B,EAAkC;AACvCT,UAAAA,aAAa,CAAC,0BAAD,CAAb,CACEL,IAAI,CAACY,CAAC,GAAG,CAAL,CAAJ,CAAYE,QAAZ,CAAqBE,MADvB,EAEE,GAFF,IAEShB,IAAI,CAACY,CAAC,GAAG,CAAL,CAAJ,CAAYG,SAFrB;AAGD,SAJM,MAIA,IAAIf,IAAI,CAACY,CAAC,GAAG,CAAL,CAAJ,CAAYE,QAAZ,KAAyB,GAA7B,EAAkC;AACvCT,UAAAA,aAAa,CAAC,0BAAD,CAAb,CACEL,IAAI,CAACY,CAAC,GAAG,CAAL,CAAJ,CAAYE,QAAZ,CAAqBE,MADvB,EAEE,GAFF,IAEShB,IAAI,CAACY,CAAC,GAAG,CAAL,CAAJ,CAAYG,SAFrB;AAGD,SAJM,MAIA;AACLR,UAAAA,QAAQ,CAACU,IAAT,CAAcjB,IAAI,CAACY,CAAC,GAAG,CAAL,CAAlB;AACD;AACF;;AAEDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBS,IAAI,CAACC,SAAL,CAAed,aAAf,CAA5B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBS,IAAI,CAACC,SAAL,CAAeZ,QAAf,CAA5B;AACD;AACF,GA5BD;;AA8BA,sBACE,QAAC,OAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAQ,MAAA,OAAO,EAAEL,aAAjB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;MAnDuBV,O","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.div`\n  margin-top: 1em;\n  margin-left: 6em;\n  margin-right: 6em;\n`;\n\nexport default function NoMatch({ token }) {\n  async function getTree() {\n    return fetch(\"http://localhost:8080/api/get_child_node_users\", {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + token.token,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    }).then((data) => data.json());\n  }\n\n  const getBinaryTree = async (e) => {\n    e.preventDefault();\n    let constructTree = { eagleViewRequestDocument: {} };\n    let unPlaced = [];\n\n    const data = await getTree();\n    console.log(\"IS ARRAY :  \"+ Array.isArray(data));\n    if (Array.isArray(data)) {\n      for (let i = 1; i < data.length; i++) {\n        if (data[i - 1].position === \"0\") {\n          constructTree[\"eagleViewRequestDocument\"][\"1\"] =\n            data[i - 1].user_name;\n        } else if (data[i - 1].position === \"L\") {\n          constructTree[\"eagleViewRequestDocument\"][\n            data[i - 1].position.father\n          ][\"1\"] = data[i - 1].user_name;\n        } else if (data[i - 1].position === \"R\") {\n          constructTree[\"eagleViewRequestDocument\"][\n            data[i - 1].position.father\n          ][\"2\"] = data[i - 1].user_name;\n        } else {\n          unPlaced.push(data[i - 1]);\n        }\n      }\n\n      console.log(\"THE TREE : \" + JSON.stringify(constructTree));\n      console.log(\"UNPLACED : \" + JSON.stringify(unPlaced));\n    }\n  };\n\n  return (\n    <Wrapper>\n      <h2>No Match</h2>\n\n      <button onClick={getBinaryTree}>\n        <h2>Get Binary Tree</h2>\n      </button>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}